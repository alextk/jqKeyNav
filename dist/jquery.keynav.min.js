/*
* jqKeyNav - jQuery plugin for keyboard navigation events binding
*
* Version: 0.0.1
* Build: 4
* Copyright 2011 Alex Tkachev
*
* Dual licensed under MIT or GPLv2 licenses
*   http://en.wikipedia.org/wiki/MIT_License
*   http://en.wikipedia.org/wiki/GNU_General_Public_License
*
* Date: 30/09/2011 11:52:00
*/

(function(a){var b={37:"left",39:"right",38:"up",40:"down",33:"pageUp",34:"pageDown",46:"del",36:"home",35:"end",13:"enter",27:"esc",9:"tab"},c=function(){this.initialize.apply(this,arguments)};a.extend(c.prototype,{initialize:function(b){b=b||{},this.scope=b.context||b.scope||null;var c={};["enter","left","right","up","down","tab","esc","pageUp","pageDown","del","home","end"].select(function(c){return a.isFunction(b[c])}).each(function(a){c[a]=b[a]}),this.handlers=c},relay:function(a){var c=a.data.keynav,d=a.which,e=b[d];if(e&&c.handlers[e]){var f=c.handlers[e],g=c.scope||f;f.call(g,a)!==!0&&a.stopEvent()}},bind:function(){this.unbind.apply(this,arguments);for(var a=0;a<arguments.length;a++){var b=arguments[a];b instanceof jQuery&&b.bind("keydown",{keynav:this},this.relay)}},unbind:function(){for(var a=0;a<arguments.length;a++){var b=arguments[a];b instanceof jQuery&&b.unbind("keydown",this.relay)}}}),a.fn.keyNav=function(b){return this.each(function(){var c=a(this);if(a.isPlainObject(b)){var d=a.keyNav(b);c.data("keyNav")&&c.data("keyNav").unbind(),c.data("keyNav",d),d.bind(c)}else b=="bind"?c.data("keyNav").bind(c):b=="unbind"?c.data("keyNav").unbind(c):b=="destroy"&&(c.data("keyNav").unbind(c),c.removeData("keyNav"))})},a.keyNav=function(a){return new c(a)}})(jQuery)